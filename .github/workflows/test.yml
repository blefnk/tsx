name: Test
on:
  push:
    branches: [develop]
  pull_request:
    branches: [master, develop, next]
jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    timeout-minutes: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: true

    - name: Build
      run: pnpm build

    - name: Restore Node.js versions
      id: cache-nodejs
      uses: actions/cache/restore@v3
      with:
        path: /home/runner/.cache/nve
        key: ${{ runner.os }}-nodejs-${{ hashFiles('tests/utils/node-versions.ts') }}

    - name: Download Node.js versions
      run: ./dist/cli.js ./tests/download-node-versions.ts
 
    - name: Save Node.js versions
      uses: actions/cache/save@v3
      with:
        path: /home/runner/.cache/nve
        key: ${{ steps.cache-nodejs.outputs.cache-primary-key }}

    - name: Test
      env:
        NODE_OPTIONS: "--max_old_space_size=4096"
      run: pnpm test

    - name: Type check
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: pnpm type-check

    - name: Lint
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: pnpm lint
