"use strict";var F=require("path"),l=require("url"),v=require("./index-ff7a6932.cjs"),b=require("./resolve-ts-path-43f50656.cjs"),m=require("./source-map.cjs"),q=require("./node-features-84a305a1.cjs"),p=require("get-tsconfig"),D=require("fs");function E(t){return t&&typeof t=="object"&&"default"in t?t:{default:t}}var h=E(F),R=E(D);const f=new Map;async function A(t){if(f.has(t))return f.get(t);if(!await R.default.promises.access(t).then(()=>!0,()=>!1)){f.set(t,void 0);return}const r=await R.default.promises.readFile(t,"utf8");try{const a=JSON.parse(r);return f.set(t,a),a}catch{throw new Error(`Error parsing: ${t}`)}}async function L(t){let e=new URL("package.json",t);for(;!e.pathname.endsWith("/node_modules/package.json");){const r=l.fileURLToPath(e),a=await A(r);if(a)return a;const n=e;if(e=new URL("../package.json",e),e.pathname===n.pathname)break}}async function N(t){var e;const r=await L(t);return(e=r==null?void 0:r.type)!=null?e:"commonjs"}const d=process.env.TSX_TSCONFIG_PATH?{path:h.default.resolve(process.env.TSX_TSCONFIG_PATH),config:p.parseTsconfig(process.env.TSX_TSCONFIG_PATH)}:p.getTsconfig(),J=d&&p.createFilesMatcher(d),S=d&&p.createPathsMatcher(d),k="file://",g=/\.([cm]?ts|[tj]sx)($|\?)/,I=/\.json(?:$|\?)/,x=t=>{const e=h.default.extname(t);if(e===".json")return"json";if(e===".mjs"||e===".mts")return"module";if(e===".cjs"||e===".cts")return"commonjs"},C=t=>{const e=x(t);if(e)return e;if(g.test(t))return N(t)},j=m.installSourceMapSupport(),O=/\/(?:$|\?)/;let y,_=process.send?process.send.bind(process):void 0;const W=async t=>{},G=({port:t})=>(y=t,_=t.postMessage.bind(t),`
	const require = getBuiltin('module').createRequire("${typeof document>"u"?new(require("url")).URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("loaders-8fc9bea0.cjs",document.baseURI).href}");
	require('tsx/source-map').installSourceMapSupport(port);
	if (process.send) {
		port.addListener('message', (message) => {
			if (message.type === 'dependency') {
				process.send(message);
			}
		});
	}
	port.unref(); // Allows process to exit without waiting for port to close
	`),w=async(t,e,r)=>{const a=await t(e,r);return!a.format&&a.url.startsWith(k)&&(a.format=await C(a.url)),a},H=[".js",".json",".ts",".tsx",".jsx"];async function P(t,e,r){const[a,n]=t.split("?");let i;for(const o of H)try{return await w(r,a+o+(n?`?${n}`:""),e)}catch(s){if(i===void 0&&s instanceof Error){const{message:c}=s;s.message=s.message.replace(`${o}'`,"'"),s.stack=s.stack.replace(c,s.message),i=s}}throw i}async function U(t,e,r){const a=O.test(t),n=a?"index":"/index",[i,o]=t.split("?");try{return await P(i+n+(o?`?${o}`:""),e,r)}catch(s){if(!a)try{return await P(t,e,r)}catch{}const c=s,{message:u}=c;throw c.message=c.message.replace(`${n.replace("/",h.default.sep)}'`,"'"),c.stack=c.stack.replace(u,c.message),c}}const X=/^\.{1,2}\//,M=async function(t,e,r,a){var n;if(O.test(t))return await U(t,e,r);const i=t.startsWith(k)||X.test(t);if(S&&!i&&!((n=e.parentURL)!=null&&n.includes("/node_modules/"))){const o=S(t);for(const s of o)try{return await M(l.pathToFileURL(s).toString(),e,r)}catch{}}if(g.test(e.parentURL)){const o=b.resolveTsPath(t);if(o)for(const s of o)try{return await w(r,s,e)}catch(c){const{code:u}=c;if(u!=="ERR_MODULE_NOT_FOUND"&&u!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}}try{return await w(r,t,e)}catch(o){if(o instanceof Error&&!a){const{code:s}=o;if(s==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await U(t,e,r)}catch(c){if(c.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw c}if(s==="ERR_MODULE_NOT_FOUND")try{return await P(t,e,r)}catch{}}throw o}},T=q.importAttributes?"importAttributes":"importAssertions",z=async function(t,e,r){var a;_&&_({type:"dependency",path:t}),I.test(t)&&(e[T]||(e[T]={}),e[T].type="json");const n=await r(t,e);if(!n.source)return n;const i=t.startsWith("file://")?l.fileURLToPath(t):t;let o=n.source.toString();if(m.shouldStripSourceMap&&(o=m.stripSourceMap(o)),n.format==="json"||g.test(t)){const s=await v.transform(o,i,{tsconfigRaw:(a=J)==null?void 0:a(i)});return{format:"module",source:j(s,t,y)}}if(n.format==="module"){const s=v.transformDynamicImport(i,o);s&&(n.source=j(s,t,y))}return n};exports.globalPreload=G,exports.initialize=W,exports.load=z,exports.resolve=M;
