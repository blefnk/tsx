import a from"path";import h from"fs";import m from"module";import{parseTsconfig as E,getTsconfig as S,createFilesMatcher as j,createPathsMatcher as x}from"get-tsconfig";import{installSourceMapSupport as y}from"../source-map.mjs";import{a as O,b}from"../index-eddc6e68.mjs";import{r as g}from"../resolve-ts-path-a8cb04a4.mjs";import"source-map-support";import"../node-features-18fdd9fd.mjs";import"url";import"esbuild";import"crypto";import"os";const P=/^\.{1,2}\//,A=/\.[cm]?tsx?$/,M=`${a.sep}node_modules${a.sep}`,i=process.env.ESBK_TSCONFIG_PATH?{path:a.resolve(process.env.ESBK_TSCONFIG_PATH),config:E(process.env.ESBK_TSCONFIG_PATH)}:S(),u=i&&j(i),_=i&&x(i),v=y(),f=m._extensions,N=f[".js"],R=[".cts",".mts",".ts",".tsx",".jsx"],C=[".js",".cjs",".mjs"],D=/\b(?:import|export)\b/,T=(e,s)=>{process.send&&process.send({type:"dependency",path:s});const r=R.some(t=>s.endsWith(t)),n=C.some(t=>s.endsWith(t));if(!r&&!n)return N(e,s);let o=h.readFileSync(s,"utf8");if(s.endsWith(".cjs")){const t=O(s,o);t&&(o=v(t,s))}else if(r||D.test(o)){const t=b(o,s,{tsconfigRaw:u==null?void 0:u(s)});o=v(t,s)}e._compile(o,s)};[".js",".ts",".tsx",".jsx"].forEach(e=>{f[e]=T}),Object.defineProperty(f,".mjs",{value:T,enumerable:!1});const l=m._resolveFilename.bind(m);m._resolveFilename=(e,s,r,n)=>{var o;if(_&&!P.test(e)&&!((o=s==null?void 0:s.filename)!=null&&o.includes(M))){const c=_(e);for(const p of c){const d=F(p,s,r,n);if(d)return d;try{return l(p,s,r,n)}catch{}}}const t=F(e,s,r,n);return t||l(e,s,r,n)};const F=(e,s,r,n)=>{const o=g(e);if(s!=null&&s.filename&&A.test(s.filename)&&o)try{return l(o[0],s,r,n)}catch(t){const{code:c}=t;if(c!=="MODULE_NOT_FOUND"&&c!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw t}};
