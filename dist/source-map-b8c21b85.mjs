import M from"source-map-support";const n=process.versions.node.split(".").map(Number),a=e=>n[0]-e[0]||n[1]-e[1]||n[2]-e[2],i=a([20,0,0])>=0;a([20,6,0])>=0;const S=a([21,0,0])>=0,f="sourceMapsEnabled"in process&&process.sourceMapsEnabled===!1,u=`
//# sourceMappingURL=`,l=e=>{const o=e.indexOf(u);return o!==-1?e.slice(0,o):e},d=`${u}data:application/json;base64,`,b=e=>{if("setSourceMapsEnabled"in process&&typeof Error.prepareStackTrace!="function")return process.setSourceMapsEnabled(!0),({code:r,map:s})=>r+d+Buffer.from(JSON.stringify(s),"utf8").toString("base64");const t=new Map;return M.install({environment:"node",retrieveSourceMap(r){const s=t.get(r);return s?{url:r,map:s}:null}}),i&&e&&e.addListener("message",({filePath:r,map:s})=>t.set(r,s)),({code:r,map:s},p,c)=>(i&&c?c.postMessage({filePath:p,map:s}):t.set(p,s),r)};export{l as a,S as b,b as i,f as s};
